<html>
<script language="JavaScript" type="text/JavaScript">
<!--
var obeImages = new Array;
var eyeglass = new Image;
 
function preLoadImages()
{
  eyeglass.src = "images/view_image.gif";
  images = document.images;
  // Only load images with class="imgborder_off"
  for (i = 0; i < images.length; i++)
  {
    image = images[i];
    if (image.className.substr(0, 10) == "imgborder_")
    {
        img = new Image;
        img.id = image.id;
        img.name = image.name;
        img.src = "images/" + image.name + ".gif";
        obeImages[img.name] = img;
    }
  }
}
 
function showImage(obj)
{
  if (obj.className.substr(0, 10) == "imgborder_")
  {
    newImg = obeImages[obj.name];
    obj.src = newImg.src;
    if (obj.border > 0)
    {
      obj.className = "imgborder_on";
    }
  }
}
 
function hideImage(obj)
{
  if (obj.className.substr(0, 10) == "imgborder_")
  {
    obj.src = eyeglass.src;
    obj.className = "imgborder_off";
  }
}
 
function showAllImages()
{
  imgs = document.images;
  for (i=0; i < imgs.length; i++)
  {
    showImage(imgs[i]);
  }
}
 
function hideAllImages()
{
  imgs = document.images;
  for (i=0; i < imgs.length; i++)
  {
    hideImage(imgs[i]);
  }
}
//-->
</script>
<style type="text/css">
<!--
.style1 {font-weight: bold}
.style6 {font-family: "Courier New", Courier, mono}
-->
</style>
<title>Using Oracle XML DB to Store, Query, Transform, and Access XML and Relational Data</title>
<link href="../../library/otn_new.css" rel="stylesheet" type="text/css">
<link href="../library/otn_new.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" href="../library/otn_new.css" type="text/css">
<body bgcolor="#ffffff" text="#000000">
<p class="bodylink">&nbsp;</p>
<h3 class="topstoryhead">Using Oracle XML DB to Store, Query, and Access XML and 
  Relational Data</h3>
<h4 class="navheader">Purpose</h4>
<p class="bodycopy">This tutorial shows you how to store, query, and access XML 
  and relational data in Oracle XML DB.</p>
<p class="navheader">Time to Complete</p>
<p class="bodycopy">Approximately 30 minutes.</p>
<h3 class="Overview"><a name="t"></a><span class="navheader">Topics</span></h3>
<p class="bodycopy">This tutorial covers the following topics:</p>
<table border="0" cellspacing="0" cellpadding="1" width="523">
  <tbody> 
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="bodylink"><a href="#o">Overview</a></td>
  </tr>
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="bodylink"><a href="#p">Prerequisites</a></td>
  </tr>
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="boldbodylink"><a href="#em" class="bodylink">Reviewing the XML 
      Schema in Enterprise Manager</a></td>
  </tr>
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="boldbodylink"><a href="#bi" class="bodylink">Creating Binary XMLTable</a></td>
  </tr>
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="boldbodylink"><a href="#xqi" class="bodylink">Improving Performance 
      of XQuery Expressions through Index Creation</a></td>
  </tr>
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="boldbodylink"><a href="#xqv"  class="bodylink">Using <font face="Courier New, Courier, mono">XMLType</font> 
      Views with XQuery</a></td>
  </tr>
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="boldbodylink"><a href="#rvbi"  class="bodylink">Using Relational 
      Views over Binary XML Table</a></td>
  </tr>
  <tr valign="top"> 
    <td><img src="images/bullet.gif" width="16" height="16"></td>
    <td class="bodylink"><a href="#s">Summary</a></td>
  </tr>
  </tbody> 
</table>
<h4 class="navheader">Viewing Screenshots</h4>
<p class="bodycopy"><img src="images/view_image.gif" width="24" height="24" align="absmiddle" onMouseOver="showAllImages()"> 
  <b><span class="style1"><font color="#ff0000" face="Arial, Helvetica, sans-serif">Place the cursor over this icon to</font><font color="#ff0000"> load and view all the screenshots for this tutorial. 



<strong> (Caution: This action loads all screenshots simultaneously, so response time may be slow depending on your Internet connection.)</strong> </font><font color="#ff0000"></font></span></b></p>
<p class="bodycopy"><b>Note: </b>Alternatively, you can place the cursor 
  over an individual icon in the following steps to load and view only the screenshot 
  associated with that step. You can hide an individual  screenshot by clicking it. </p>
<h3 class="Overview"><a name="o"></a><span class="navheader">Overview</span></h3>
<p class="bodycopy">Since Oracle 9i Database Release 2, Oracle XML DB has been 
  seamlessly integrated with the Oracle database to provide high-performance database-native 
  storage, retrieval, and management of XML data. With the new Oracle Database 
  11g release, Oracle XML DB is taking another leap ahead with a rich set of new 
  capabilities to simplify DBAs' tasks in managing XML data while further empowering 
  XML and SOA application developers. Oracle XML DB now supports multiple database-native 
  XML storage models and XML indexing schemes, SQL/XML standard operations, W3C 
  standard XQuery data model and XQuery/XPath languages, database-native web services, 
  high performance XML publishing, XML DB repository, and versioning and access 
  control. This tutorial covers these topics along with key new features for using 
  Oracle XML DB to store, query, transform, and access XML and relational data. 
  <br>
  <br>
  <b>Binary XML Storage Model</b>: <br>
  Binary XML is a new storage model for abstract data type <font face="Courier New, Courier, mono">XMLType</font>, 
  joining the existing native storage models of structured (object-relational) 
  and unstructured (CLOB) storage. Binary XML storage provides more efficient 
  database storage, updating, indexing, and fragment extraction than unstructured 
  storage. It can provide better query performance than unstructured storage-it 
  does not suffer from the XML parsing bottleneck (it is a post-parse persistence 
  model). Like structured storage, binary XML storage is aware of XML Schema data 
  types and can take advantage of native database data types. Like unstructured 
  storage, no data conversion is needed during database insertion or retrieval. 
  Like structured storage, binary XML storage allows for piecewise updates. Because 
  binary XML data can also be used outside the database, it can serve as an efficient 
  XML exchange medium, and you can offload work from the database to increase 
  overall performance in many cases. Like unstructured storage, binary XML data 
  is kept in document order. Like structured storage, data and metadata can, using 
  binary storage, be separated at the database level, for efficiency. Like unstructured 
  storage, however, binary storage allows for intermingled data and metadata, 
  which lets instance structures vary. Binary XML storage allows for very complex 
  and variable data, which in the structured-storage model could necessitate using 
  many database tables and joins. Unlike the other <font face="Courier New, Courier, mono">XMLType</font> 
  storage models, you can use binary storage for XML schema-based data even if 
  the XML schema is not known beforehand, and you can store multiple XML schemas 
  in the same table and query across common elements.<br>
</p>
<p class="bodycopy"><font face="Courier New, Courier, mono"><b>XMLIndex</b></font><b> 
  Indexing for Binary XML and Unstructured XML Storage Models:</b><br>
  B-Tree indexes can be used advantageously with structured storage. They provide 
  sharp focus by targeting the underlying objects directly. They are generally 
  ineffective, however, in addressing the detailed structure (elements and attributes) 
  of an XML document stored in a binary XML or a CLOB instance. That is the special 
  domain of XMLIndex: binary XML and unstructured storage models. Unlike a B-Tree 
  index, which you define for a specific column that represents an individual 
  XML element or attribute, an XMLIndex index is very general: indexing with XMLIndex 
  applies to all possible XPath expressions for your XML data.An <font face="Courier New, Courier, mono">XMLIndex</font> 
  index presents the following advantages over other indexing methods:</p>
<ul>
  <li><span class="bodycopy">An <font face="Courier New, Courier, mono">XMLIndex</font> 
    index can be used for SQL/XML functions <font face="Courier New, Courier, mono">XMLExists()</font>, 
    <font face="Courier New, Courier, mono">XMLTable()</font>, and<font face="Courier New, Courier, mono"> 
    XMLQuery()</font>, and it is effective in any part of a query; it is not limited 
    to use in a <font face="Courier New, Courier, mono">WHERE</font> clause. This 
    is not the case for any of the other kinds of indexes you might use with XML 
    data.</span></li>
  <li><font face="Courier New, Courier, mono"><span class="bodycopy">XMLIndex</span></font><span class="bodycopy"> 
    can thus speed access to <font face="Courier New, Courier, mono">SELECT</font> 
    list data and <font face="Courier New, Courier, mono">FROM</font> list data, 
    making it useful for XML fragment extraction, in particular. Function-based 
    indexes and CTXXPath indexes </span></li>
  <li><span class="bodycopy">You need no prior knowledge of the XPath expressions 
    that will be used in queries. XMLIndex is completely general. This is not 
    the case for function-based indexes.</span></li>
  <li><span class="bodycopy">You can use an XMLIndex index with either XML schema-based 
    or non-schema-based data. It can be used with binary XML and unstructured 
    storage models. B-Tree indexing is appropriate only for schema-based data 
    stored object-relationally (structured storage); it is ineffective for XML 
    schema-based data stored in a binary XML or a <font face="Courier New, Courier, mono">CLOB</font> 
    instance.</span></li>
  <li><span class="bodycopy">You can use an <font face="Courier New, Courier, mono">XMLIndex</font> 
    index for searches with XPath expressions that target collections, that is, 
    nodes that occur multiple times within a document. This is not the case for 
    functional indexes.</span></li>
</ul>
<p><span class="bodycopy"><b>Oracle Database-Native XQuery</b>:<br>
  Since XQuery is now a W3C standard, the IT community has started adopting the 
  business uses of XML and XQuery. As the innovation leader in commercial database 
  technology, Oracle Database 11g provides a full-featured native XQuery engine 
  integrated with the traditional Oracle database server.On the SQL side, the 
  SQL/XML standard has defined a way to encapsulate XML in SQL and to integrate 
  the querying of XML using XQuery. This is being accomplished by introducing 
  new SQL functions: <font face="Courier New, Courier, mono">XMLQuery</font>, 
  <font face="Courier New, Courier, mono">XMLTable</font>, <font face="Courier New, Courier, mono">XMLExists</font>, 
  and <font face="Courier New, Courier, mono">XMLCast</font> , which operate on 
  XML and SQL values using XQuery. Oracle Database 11g enables XQuery support 
  in the database server through these SQL standard functions. A new <font face="Courier New, Courier, mono">XQUERY</font> 
  command has also been implemented in SQL*Plus to allow users to enter XQuery 
  expressions on the command line. With standards-based implementation of XQuery 
  in Oracle Database 11g, application developers can use their favorite APIs (e.g., 
  JDBC, ODP.NET, and web service) to access Oracle Database XQuery capabilities.</span></p>
<p><b><span class="bodycopy">Benefits of Oracle XQuery:</span></b><span class="bodycopy"><br>
  Using SQL/XML XQuery functions along with indexing schemes for structured, unstructured, 
  and binary XML storage models, XML DB can perform uniform XML queries across 
  different storage models with orders of magnitude performance improvement over 
  DOM-based functional evaluation of XML queries. Furthermore, XML queries can 
  be seamlessly merged with SQL relational queries to handle all query scenarios. 
  Finally, the XML query capabilities of Oracle XML DB are built on the solid 
  foundation of industry's best relational database that is highly reliable, available, 
  scalable, and secure. In short, the XML DB query capabilities in Oracle Database 
  11g provide the most comprehensive and efficient functionality for versatile, 
  scalable, concurrent, and high performance XML applications. </span></p>
<p>&nbsp;</p>
<p align="right"><span class="bodycopy"><a href="#t" class="bodylink"></a></span><a href="#t" class="bodylink">Back 
  to Topic List</a></p>
<h3 class=navheader><a name="p"></a>Prerequisites</h3>
<p class="bodycopy">Before you perform this tutorial, you should first complete 
  the following steps: </p>
<table border="0" cellpadding="1" cellspacing="0" width="650">
  <tbody> 
  <tr valign="top"> 
    <td class="bodycopy" width="26"><b> 1.</b></td>
    <td colspan="2" width="620"> 
      <p class="bodycopy">Install Oracle Database 11<i>g</i> and make sure the 
        <b><font face="Courier New, Courier, mono">OE</font></b>, <font face="Courier New, Courier, mono"> 
        <b>HR</b></font> users are unlocked.</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td class="bodycopy" width="26"><b>2.</b></td>
    <td colspan="2" width="620" class="bodycopy">Set environment variables to 
      connect to Oracle Database 11<i>g</i>.</td>
  </tr>
  <tr valign="top"> 
    <td class="bodycopy" width="26"><b> 3.</b></td>
    <td colspan="2" width="620"> 
      <p class="bodycopy">Download and unzip the <a href="http://stcontent.oracle.com/content/dav/oracle/Libraries/ST%20Curriculum/ST%20Curriculum-Public/Courses/OBE/11gr1_db/datamgmt/xmldb_trg/xmldb_trg.zip">xmldb_trg.zip</a> 
        file into your working directory (i.e.wkdir)</p>
    </td>
  </tr>
  </tbody> 
</table>
<P align="left" class=bodycopy><b>Additional Notes for Prerequisites</b>: </P>
<p><span class="bodycopy">If you do not unlock the <font face="Courier New, Courier, mono">OE</font>, 
  and <font face="Courier New, Courier, mono">HR</font> users during Oracle Database 
  11g installation, perform the following:</span></p>
<blockquote> 
  <p class="bodycopy"><b>a</b>. Open a terminal window, and type the following 
    command:</p>
  <blockquote> 
    <p class="bodycopy"><font face="Courier New, Courier, mono">sqlplus sys/oracle 
      as sysdba;</font></p>
  </blockquote>
  <p class="bodycopy"><b>b</b>. Once you get connected as <font face="Courier New, Courier, mono">sys</font>, 
    then, unlock the OE, and HR accounts.Then, grant <font face="Courier New, Courier, mono">dba</font> 
    role to OE, and HR. Grant <font face="Courier New, Courier, mono">SELECT_CATALOG_ROLE</font> 
    to OE. In the SQL*Plus window, type the following commands. Alternatively, 
    run the script <font face="Courier New, Courier, mono">accounts.sql</font>:</p>
  <blockquote> 
    <p class="bodycopy"><font face="Courier New, Courier, mono">ALTER USER HR 
      ACCOUNT UNLOCK IDENTIFIED BY HR;<br>
      ALTER USER OE ACCOUNT UNLOCK IDENTIFIED BY OE;<br>
      GRANT DBA to OE, HR;<br>
      GRANT SELECT_CATALOG_ROLE TO OE;</font></p>
  </blockquote>
</blockquote>
<p class="bodycopy">To set environment variables to connect to Oracle Database 
  11<i>g</i>, perform the following<span class="bodycopy">:</span></p>
<blockquote> 
  <p class="bodycopy"><b>a</b>. Open a terminal window, and search for <font face="Courier New, Courier, mono">.bash_profile</font>. 
  </p>
  <p><b>b. </b><span class="bodycopy">Edit the .bash_profile to make sure of the 
    following:</span></p>
  <ul>
    <li><span class="bodycopy"><font face="Courier New, Courier, mono">ORACLE_HOME</font> 
      environment variable is set</span></li>
    <li><span class="bodycopy"><font face="Courier New, Courier, mono">ORACLE_HOME/lib</font> 
      is added to <font face="Courier New, Courier, mono">LD_LIBRARY_PATH</font> 
      environment variable</span></li>
  </ul>
  <p class="bodycopy">For example, if your <font face="Courier New, Courier, mono">ORACLE_HOME</font> 
    is <font face="Courier New, Courier, mono">$ORACLE_BASE/product/11.1.0/db_1</font>, 
    and <font face="Courier New, Courier, mono">JAVA_HOME</font> is <font face="Courier New, Courier, mono">/home/oracle/jdk1.5.0_05</font>, 
    make sure that your <font face="Courier New, Courier, mono">.bash_profile</font> 
    includes the following entries: </p>
  <span class="bodycopy"><font face="Courier New, Courier, mono">LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ORACLE_HOME/lib</font></span><font face="Courier New, Courier, mono"><span class="bodycopy"><br>
  </span></font><span class="bodycopy"><font face="Courier New, Courier, mono">ORACLE_BASE=/u01/app/oracle<br>
  ORACLE_HOME=$ORACLE_BASE/product/11.1.0/db_1<br>
  ORACLE_SID=orcl<br>
  JAVA_HOME=/home/oracle/jdk1.5.0_05<br>
  PATH=$JAVA_HOME/bin:$PATH</font></span><font face="Courier New, Courier, mono"><span class="bodycopy"><br>
  </span></font><span class="bodycopy"><font face="Courier New, Courier, mono">PATH=$ORACLE_HOME/bin:$PATH</font></span> 
  <p><span class="bodycopy"><font face="Courier New, Courier, mono">CLASSPATH=$ORACLE_HOME/jdbc/lib/ojdbc.jar:$ORACLE_HOME/jlib/orai18n.jar<br>
    export PATH<br>
    export ORACLE_BASE ORACLE_HOME ORACLE_SID JAVA_HOME LD_LIBRARY_PATH</font></span><br>
  </p>
  <p><span class="bodycopy"><b>c</b>. Once you make the changes to <font face="Courier New, Courier, mono">.bash_profile</font>, 
    execute the script as follows:</span></p>
  <p><span class="bodycopy"><font face="Courier New, Courier, mono">./.bash_profile</font></span></p>
</blockquote>
<P align="right" class=bodycopy><a href="#t" class="bodylink">Back to Topic List</a></P>
<p class="navheader"><span class="navheader"><a name="em" id="t2"></a>Reviewing 
  the XML Schema in Enterprise Manager</span></p>
<p class="bodycopy">An XML Schema has been supplied as part of the OE Schema in 
  the Sample Schema that is provided with Oracle Database 11g. In this section, 
  you will review its contents using Enterprise Manager. Perform the following 
  steps: </p>
<table border="0" cellspacing="0" cellpadding="1" width="650">
  <tr valign="top"> 
    <td width="26" class="bodycopy" height="124"><b> 1.</b></td>
    <td colspan="2" width="620" height="124"> 
      <p class="bodycopy">Open your browser and enter the following URL:</p>
      <p class="bodycopy"><font face="Courier New, Courier, mono"><b>https://&lt;hostname&gt;:1158/em</b></font></p>
      <p class="bodycopy">Enter the following details, and accept the default 
        value for <b>Connect As</b>. </p>
      <p class="bodycopy">User Name: <b><font face="Courier New, Courier, mono">system</font></b><br>
        Password: <b><font face="Courier New, Courier, mono">oracle</font></b></p>
      <p class="bodycopy">Then, click<b> Login</b>.</p>
      <p class="bodycopy"><img src="images/view_image.gif" name="em1" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b> 2.</b></td>
    <td colspan="2" width="620"> 
      <p class="bodycopy"> Oracle Enterprise Manager 11g Database Control window 
        is displayed. Click the <b>Schema</b> tab.</p>
      <p><img src="images/view_image.gif" name="em2" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"> 
      </p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>3.</b></td>
    <td colspan="2" width="620"> 
      <p class="bodycopy">Under <b>XML Database</b>, select the <b>Configuration</b> 
        link.</p>
      <p class="bodycopy"><img src="images/view_image.gif" name="em3" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>4.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Enter <strong>2100</strong> for FTP Port and <strong>8080</strong> for 
        HTTP port. Then, click <strong>OK</strong>. </p>
      <p><img src="images/view_image.gif" name="em4_a" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p><br>
        <img src="images/view_image.gif" name="em4_b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"> 
      </p>
      <p>&nbsp; </p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>5.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Your configuration has been set. Click <strong> Database</strong>.</p>
      <p><img src="images/view_image.gif" name="em5" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"> 
      </p>
      <p>&nbsp; </p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>6.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Go to<b> Schema &gt; XML Database</b>, and select the <strong>Resources</strong> 
        link. </p>
      <p><img src="images/view_image.gif" name="em6_a" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p><br>
        <img src="images/view_image.gif" name="em6_b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>7.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>All the resources are displayed. Expand <strong>home</strong>. </p>
      <p><img src="images/view_image.gif" name="em7" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>8.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Expand <strong>OE - PurchaseOrders - 2002 - Apr</strong> to show the 
        list of XML documents. Click on the first XML document in the list. </p>
      <p><img src="images/view_image.gif" name="em8" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>9.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>General information about the document is shown. To see the actual contents 
        of the document, click <strong>Display Contents</strong>.</p>
      <p><img src="images/view_image.gif" name="em8_b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>10.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>The file contents are shown. Click <strong>Show formatted XML Content</strong>. 
      </p>
      <p><img src="images/view_image.gif" name="em9" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>11.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Review the formatted XML document. When you are done, close the window. 
      </p>
      <p><img src="images/view_image.gif" name="em9_b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>12</b>.</td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Click <strong>Database</strong> </p>
      <p><img src="images/view_image.gif" name="em10" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>13</b>.</td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Go to<b> Schema &gt; XML Database</b>. Then, click <strong>XMLType Tables</strong></p>
      <p><img src="images/view_image.gif" name="em11_a" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p><br>
        <img src="images/view_image.gif" name="em11_b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>14.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>In the XMLType Tables search window, the Object Name displays SYSTEM. 
        Delete <b>SYSTEM</b>, and click <b>Go</b>.</p>
      <p><img src="images/view_image.gif" name="em12" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>15</b>.</td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>Click the table name <strong>PURCHASEORDER</strong>.</p>
      <p><img src="images/view_image.gif" name="em13" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>16.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>The table definition is displayed. Scroll down to see more information. 
        Then, click <b>OK</b>. </p>
      <p><img src="images/view_image.gif" name="em14_a" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p><br>
        <img src="images/view_image.gif" name="em14_b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b>17.</b></td>
    <td colspan="2" width="620" class="bodycopy"> 
      <p>To log out of Oracle Enterprise Manager 11<i>g</i>, click <b>Logout</b>.</p>
      <p><img src="images/view_image.gif" name="em15" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
</table>
<P align="right" class=bodycopy><a href="#t" class="bodylink">Back to Topic List</a></P>
<h3 class="Install"><a name="bi" id="t2"></a><span class="navheader">Creating 
  Binary XML Table </span></h3>
<p class="bodycopy">In this section, you create a binary XML table, and insert 
  rows with data selected from the <font face="Courier New, Courier, mono">PURCHASEORDER</font> 
  table.You use Oracle SQL Developer throughout this tutorial. Perform the following 
  steps:</p>
<table border="0" cellspacing="0" cellpadding="1" width="315">
  <tbody> 
  <tr valign="top"> 
    <td colspan="2" class="bodylink" width="262"> 
      <p><a href="#sqldev">Start SQL Developer</a></p>
    </td>
  </tr>
  <tr valign="top"> 
    <td colspan="2" class="bodylink" width="262"> 
      <p><a href="#binxmltab">Create Binary XML Table</a></p>
    </td>
  </tr>
  </tbody> 
</table>
<p align="right"><a href="#t" class="bodylink">Back to Topic List</a></p>
<p align="left"><a name="sqldev" id="t2"></a><span class="boldbodycopy">Start 
  SQL Developer </span></p>
<p class="bodycopy">Perform the following steps:</p>
<table border="0" cellspacing="0" cellpadding="1" width="650">
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b> 1.</b></td>
    <td colspan="2" width="620"> 
      <p class="bodycopy">Open a terminal window, and go to the location of SQL Developer 
        install. Then, start SQL Developer. Use the following commands.</p>
      <p class="bodycopy"><font face="Courier New, Courier, mono">cd /u01/app/oracle/product/11.1.0/db_1/sqldeveloper</font><br>
        <font face="Courier New, Courier, mono">sh sqldeveloper.sh</font></p>
      <p class="bodycopy"><img src="images/view_image.gif" name="sqldev1a" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
    </td>
  </tr>
  <tr valign="top">
    <td width="26" class="bodycopy"><b>2.</b></td>
    <td colspan="2" width="620">
      <p class="bodycopy">You must create a database connection as OE user. Perform 
        the following steps.</p>
      <p class="bodycopy"><b>a</b>. In the Connections tab, right-click<b> Connections</b> 
        and select <b>New Connection</b>.</p>
      <p class="bodycopy"><img src="images/view_image.gif" name="sqldev2a" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
      <p class="bodycopy"><b>b</b>. The New/Select Database Connection window 
        appears. Enter the following details, and click <b>Test </b>to make sure 
        that the connection has been set correctly.</p>
      <p class="bodycopy">Connection Name: <b>oe</b><br>
        UserName: <b>oe</b><br>
        Password:<b>oe</b><br>
        Hostname: <b>localhost</b> or &lt;<b>hostname</b>&gt; if you are using 
        a remote machine<br>
        Port: <b>1521</b><br>
        SID: <b>orcl</b></p>
      <p class="bodycopy">If you select the Save Password check box, the password 
        is saved to an XML file. Therefore, once you close SQL Developer connection 
        and open again, you will not be prompted for the password.</p>
      <p class="bodycopy"><br>
        <br>
        <img src="images/view_image.gif" name="sqldev2b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"> 
      </p>
      <p class="bodycopy">&nbsp; </p>
      <p class="bodycopy"><b>c</b>. The test status shows success. Click <b>Connect</b>.</p>
      <p class="bodycopy"><img src="images/view_image.gif" name="sqldev2c" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"> 
      </p>
      <p class="bodycopy">&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="26" class="bodycopy"><b> 3.</b></td>
    <td colspan="2" width="620"> 
      <p class="bodycopy">Set the Autotrace parameters. Perform the following 
        steps:</p>
      <p class="bodycopy"><b>a</b>. Go to <b>Tools &gt; Preferences</b>.</p>
      <p class="bodycopy"><img src="images/view_image.gif" name="sqldev3a" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
      <p class="bodycopy"><b>b</b>.Expand <b>Database</b>, and<b> </b>select <b>Autotrace 
        Parameters</b>.</p>
      <p class="bodycopy"><img src="images/view_image.gif" name="sqldev3b" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
      <p class="bodycopy"><b>c</b>. Make sure to select the following check boxes 
        and click <b>OK</b>.</p>
      <p class="bodycopy">&nbsp;</p>
      <p class="bodycopy"> Object_Name<br>
        Cost<br>
        Cardinality </p>
      <p class="bodycopy"><img src="images/view_image.gif" name="sqldev3c" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
    </td>
  </tr>
</table>
<p class="bodycopy">In the above section, you learned how to connect to SQL Developer, 
  and set Autotrace parameters.</p>
<div align="right">
  <p><a href="#bi" class="bodylink">Back to Topic</a></p>
</div>
                                                        <div align="left">
                                                          <p><a name="binxmltab" id="t2"></a><span class="boldbodycopy">Create 
    Binary XML Table</span></p>
  </div>
                                                    <table border="0" cellspacing="0" cellpadding="1" width="650">
  <tr valign="top"> 
    <td width="27" class="bodycopy"><b> 1.</b></td>
    <td colspan="2" width="619"> 
      <p class="bodycopy">Create an <font face="Courier New, Courier, mono">XMLType</font> 
        table with binary XML storage, and populate the table with data selected 
        from the <font face="Courier New, Courier, mono">PURCHASEORDERS</font> 
        table. Run the script <b><font face="Courier New, Courier, mono">create_s1_bix_table.sq</font>l</b>. 
        Perform the following steps:</p>
      <p class="bodycopy"><b>a.</b> Right-click in the <b>Enter SQL Statement</b> 
        box, and select <b>Open File</b>. </p>
      <p class="bodycopy"><img src="images/view_image.gif" name="bia" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
      <p class="bodycopy"><b>b</b>. Browse to the location of your working directory, 
        and select the file <b><font face="Courier New, Courier, mono">&lt;filename&gt;</font></b>. 
        Then, click <b>Open</b>.</p>
      <p class="bodycopy"><img src="images/view_image.gif" name="bib" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
      <p class="bodycopy"><b>c</b>. The code is displayed in the Enter SQL Statement 
        box of the SQL Worksheet. Click the <b>Run Scrip</b>t icon. Alternatively, 
        you can press <b>F5</b>. Note the results that are displayed under the 
        Script Output pane. </p>
      <p class="bodycopy"><b><font face="Courier New, Courier, mono">create_s1_bix_table.sq</font>l<br>
        <br>
        </b><span class="bodycopy"><font face="Courier New, Courier, mono">DROP 
        table po_sl_bix_table purge;<br>
        /</font></span><font face="Courier New, Courier, mono"><span class="bodycopy"><br>
        </span></font><span class="bodycopy"><font face="Courier New, Courier, mono">CREATE 
        TABLE PO_SL_BIX_TABLE OF XMLType<br>
        XMLType STORE AS BINARY XML;<br>
        /<br>
        INSERT INTO po_sl_bix_table <br>
        SELECT object_value from purchaseorder;</font></span><br>
        / </p>
      <p><img src="images/view_image.gif" name="bic" border="1" class="imgborder_off" id="htmldbt01s02" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">Note:Throughout this tutorial, to execute the script 
        files in SQL Developer, you must follow the above steps a through c. If 
        you want to run a single statement at the mouse pointer, click the <b>Execute 
        Statement</b> icon. Alternatively, move the cursor over the statement, 
        and press <b>F9</b>.</p>
      <p class="bodycopy">&nbsp;</p></td>
  </tr>
</table>
                                                    <p class="bodycopy">In the above topic, you learned how to create an <font face="Courier New, Courier, mono">XMLType</font> 
  table with binary XML storage. You also learned how to populate data into this 
  table.</p>
<p align="right" class="bodycopy"><a href="#t" class="bodycopy">Back to Topic 
  List</a></p>
                                                    <h3 class="Install"><span class="navheader"><a name="xqi" id="t2"></a>Improving 
  Performance of XQuery Expressions through Index Creation </span></h3>
<p> <span class="bodycopy"> You can increase the performance of your XQuery by 
  creating an index. In this section, you will create B-Tree indexes on object 
  relational storage and <font face="Courier New, Courier, mono">XMLIndex</font> 
  index on binary storage table. You will then run the SQL/XML, XQuery expressions 
  against both object-relational and binary XML tables to see the explain plan 
  and note that the performance has improved. Perform the following steps:</span></p>
<table border="0" cellspacing="0" cellpadding="1" width="649" class="bodycopy">
  <tr valign="top"> 
    <td width="23"><b> 1.</b></td>
    <td width="622"> 
      <p class="bodycopy">In your SQLDeveloper session, connect as <font face="Courier New, Courier, mono">OE</font> 
        user. Then, execute the script <strong>createXMLIndexes.</strong></p>
      <p class="bodycopy"><font face="Courier New, Courier, mono">set echo on<br>
        -- B-tree indexes for O-R storage<br>
        drop index iPurchaseOrderUser;<br>
        drop index iPurchaseOrderRef;<br>
        drop index iLineItemPartNumber;<br>
        drop index iPartNumber;<br>
        drop index iDESCRIPTION_FULL_TEXT;</font></p>
      <p><font face="Courier New, Courier, mono">-- XMLIndex indexes for binary 
        XML storage<br>
        drop index po_sl_xmlindex_bix_ix force;<br>
        drop index po_sl_bix_text_ix;</font></p>
      <p><font face="Courier New, Courier, mono">create index iPurchaseOrderUser 
        on PurchaseOrder<br>
        (extractValue(object_value,'/PurchaseOrder/User'))<br>
        /<br>
        create index iPurchaseOrderRef on PurchaseOrder<br>
        (extractValue(object_value,'/PurchaseOrder/Reference'))<br>
        /</font></p>
      <p><font face="Courier New, Courier, mono">create index iLineItemPartNumber 
        on LINEITEM_TABLE<br>
        (ITEMNUMBER, PART.PART_NUMBER, NESTED_TABLE_ID) compute statistics<br>
        /<br>
        create index iPartNumber on LINEITEM_TABLE <br>
        (PART.PART_NUMBER, NESTED_TABLE_ID) compute statistics<br>
        /</font></p>
      <p><font face="Courier New, Courier, mono">-- Create XML index on the binary 
        XML table<br>
        create index po_sl_xmlindex_bix_ix on po_sl_bix_table(object_value) indextype 
        is xdb.xmlindex<br>
        parameters ('PATH TABLE po_sl_bix_path_table<br>
        PATH ID INDEX po_sl_bix_path_id_ix<br>
        ORDER KEY INDEX po_sl_bix_order_key_ix<br>
        VALUE INDEX po_sl_bix_value_ix')<br>
        /</font></p>
      <p><font face="Courier New, Courier, mono">-- Create a secondary text index 
        on the VALUE column of the path table<br>
        CREATE INDEX po_sl_bix_text_ix ON po_sl_bix_path_table (VALUE) INDEXTYPE 
        IS CTXSYS.CONTEXT<br>
        parameters ('transactional')<br>
        /</font></p>
      <p><font face="Courier New, Courier, mono">call dbms_stats.gather_table_stats(USER,'PURCHASEORDER')<br>
        /<br>
        call dbms_stats.gather_table_stats(USER,'LINEITEM_TABLE')<br>
        /<br>
        call dbms_stats.gather_table_stats(USER,'po_sl_bix_table')<br>
        /<br>
        call dbms_stats.gather_index_stats(USER,'iPurchaseOrderUser')<br>
        /<br>
        call dbms_stats.gather_index_stats(USER,'iPurchaseOrderRef')<br>
        /<br>
        call dbms_stats.gather_index_stats(USER,'iLineItemPartNumber')<br>
        /<br>
        call dbms_stats.gather_index_stats(USER,'iPartNumber')<br>
        /<br>
        call dbms_stats.gather_index_stats(USER,'po_sl_xmlindex_bix_ix')<br>
        /<br>
        call dbms_stats.gather_index_stats(USER,'po_sl_bix_text_ix')</font><br>
        /</p>
      <p></p>
      <p class="style1 bodycopy"><strong><img src="images/view_image.gif" name="idx1a" class="imgborder_off" border="1" id="createxmlindexes" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></p>
      <p class="style1 bodycopy"><strong><img src="images/view_image.gif" name="idx1b" class="imgborder_off" border="1" id="createxmlindexes" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></p>
      <p class="style1 bodycopy"><strong><img src="images/view_image.gif" name="idx1c" class="imgborder_off" border="1" id="createxmlindexes" onClick="hideImage(this)" onMouseOver="showImage(this)"><br>
        </strong></p>
      <p class="style1 bodycopy"><strong><img src="images/view_image.gif" name="idx1d" class="imgborder_off" border="1" id="createxmlindexes" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></p>
      <p class="style1 bodycopy"><strong><img src="images/view_image.gif" name="idx1e" class="imgborder_off" border="1" id="createxmlindexes" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></p>
      <p class="style1 bodycopy">&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="23"><b> 2.</b></td>
    <td width="622"> 
      <p class="bodycopy">Now that you created indexes, you view the explain plan 
        to observe the performance of SQL/XML, XQuery expressions. Observe that 
        the explain plan picks up the applicable indexes.<br>
        <br>
        First, view the execution plan of the query that reviews a specific purchase 
        order.In the <b>Enter SQL Statement</b> box, perform the following steps:</p>
      <p><b>a</b>. Open the file <strong>XQuery03a. </strong>The code is displayed 
        in the <b>Enter SQL Statement</b> box. Now, click the <b>Autotrace</b> 
        icon. Note the usage of the index <font face="Courier New, Courier, mono">IPURCHASEORDERREF</font>.</p>
      <p>Code in XQuery03a:<br>
        <font face="Courier New, Courier, mono">--Xquery: Review a specific purchase 
        order</font></p>
      <p><font face="Courier New, Courier, mono">SELECT XMLQuery('/PurchaseOrder/ShippingInstructions/name' 
        passing object_value returning content) <br>
        FROM PURCHASEORDER <br>
        WHERE XMLEXISTS('/PurchaseOrder[Reference=&quot;SBELL-2002100912333601PDT&quot;]' 
        passing object_value)<br>
        /</font><br>
      </p>
      <p><img src="images/view_image.gif" name="idx2c" class="imgborder_off" border="1" id="xquery03b" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p><b>b.</b> Open the file <strong>XQuery03b</strong> , and click the <b>Autotrace</b> 
        icon. Note the usage of <font face="Courier New, Courier, mono">XMLIndex</font> 
        index.</p>
      <p class="bodycopy">Code in XQuery03b:<br>
        <font face="Courier New, Courier, mono">-- Same query on a binary storage 
        table<br>
        SELECT XMLQuery('/PurchaseOrder/ShippingInstructions/name' passing object_value 
        returning content).getStringVal() <br>
        FROM PO_SL_BIX_TABLE <br>
        WHERE XMLEXISTS('/PurchaseOrder[Reference=&quot;SBELL-2002100912333601PDT&quot;]' 
        passing object_value)<br>
        /</font><br>
      </p>
      <p><img src="images/view_image.gif" name="idx2d" class="imgborder_off" border="1" id="xquery03c" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
      </td>
  </tr>
  <tr valign="top"> 
    <td width="23"><b>3.</b></td>
    <td width="622"> 
      <p>View the execution plan of the query that reviews all the purchase orders 
        having a particular part id. </p>
      <p><b>a</b>. Open the file <strong>XQuery04a</strong>. The code is displayed 
        in the <b>Enter SQL Statement</b> box. Now, click the <b>Autotrace</b> 
        icon. Note the usage of <font face="Courier New, Courier, mono">IPARTNUMBER<font face="Times New Roman, Times, serif">.</font></font></p>
      <p>Code in XQuery04a:<br>
        <font face="Courier New, Courier, mono">--List the purchase orders References 
        having a particular part id</font></p>
      <p><font face="Courier New, Courier, mono">SELECT XMLQuery('/PurchaseOrder/Reference' 
        passing object_value returning content) <br>
        FROM PURCHASEORDER<br>
        WHERE XMLExists('/PurchaseOrder/LineItems/LineItem/Part[@Id=&quot;717951002372&quot;]' 
        passing object_value)<br>
        /</font><br>
      </p>
      <p><img src="images/view_image.gif" name="idx3c" class="imgborder_off" border="1" id="xquery04b" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>b. Open the file <b>XQuery04b</b>, and click the <b>Autotrace</b> icon. 
        Note the usage of <font face="Courier New, Courier, mono">XMLIndex</font> 
        index. </p>
      <p>Code in XQuery04b:<br>
        <font face="Courier New, Courier, mono">--Same query on binary storage 
        table<br>
        SELECT XMLQuery('/PurchaseOrder/Reference' passing object_value returning 
        content).getStringVal() <br>
        FROM PO_SL_BIX_TABLE<br>
        WHERE XMLExists('/PurchaseOrder/LineItems/LineItem/Part[@Id=&quot;717951002372&quot;]' 
        passing object_value)<br>
        /</font><br>
      </p>
      <p><img src="images/view_image.gif" name="idx3c_bin" class="imgborder_off" border="1" id="xquery04b" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
      </td>
  </tr>
  <tr valign="top"> 
    <td width="23"><b> 4.</b></td>
    <td width="622"> 
      <p class="bodycopy">View the execution plan of the query that lists the 
        description for each line item on a particular purchase order. </p>
      <p><b>a</b>. Open the file <strong>XQuery05a. </strong>The code is displayed 
        in the <b>Enter SQL Statement</b> box. Now, click the <b>Autotrace</b> 
        icon.</p>
      <p>Code in XQuery05a:<br>
        <font face="Courier New, Courier, mono">-- 1. List the description for 
        each item on the purchase order</font></p>
      <p><font face="Courier New, Courier, mono">SELECT XMLQuery('/PurchaseOrder/LineItems/LineItem/Description' 
        passing object_value returning content) <br>
        FROM PURCHASEORDER<br>
        WHERE XMLExists('/PurchaseOrder[Reference=&quot;SBELL-2002100912333601PDT&quot;]' 
        passing object_value)<br>
        /</font><br>
      </p>
      <p><img src="images/view_image.gif" name="idx4c" class="imgborder_off" border="1" id="xquery05b" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p><b>b</b>. Open the file <strong>XQuery05b. </strong>The code is displayed 
        in the <b>Enter SQL Statement</b> box. Now, click the <b>Autotrace</b> 
        icon.</p>
      <p>Code in XQuery05b:<br>
        <font face="Courier New, Courier, mono">--same query on binary storage 
        table<br>
        SELECT XMLQuery('/PurchaseOrder/LineItems/LineItem/Description' passing 
        object_value returning content).getStringVal() <br>
        FROM PO_SL_BIX_TABLE<br>
        WHERE XMLExists('/PurchaseOrder[Reference=&quot;SBELL-2002100912333601PDT&quot;]' 
        passing object_value)<br>
        /</font></p>
      <p><img src="images/view_image.gif" name="idx4d" class="imgborder_off" border="1" id="xquery05b" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p>&nbsp;</p>
      </td>
  </tr>
  <tr valign="top"> 
    <td width="23"><b>5.</b></td>
    <td width="622"> 
      <p>View the execution plan of the query that lists the references for LineItem 
        20 with a description containing picnic on a particular purchase order. 
        Open the file <strong>XQuery06b</strong>. The code is displayed in the 
        <b>Enter SQL Statement</b> box. Now, click the <b>Autotrace</b> icon.</p>
      <p>Code in XQuery06b:<br>
        <font face="Courier New, Courier, mono">--same query on binary storage 
        table<br>
        SELECT XMLQuery('/PurchaseOrder/Reference' passing object_value returning 
        content).getStringVal() <br>
        FROM PO_SL_BIX_TABLE<br>
        WHERE XMLExists('/PurchaseOrder/LineItems/LineItem[@ItemNumber=20]/Description/text()[ora:contains(.,&quot;Picnic&quot;) 
        &gt; 0]' passing object_value)<br>
        /</font><br>
      </p>
      <p class="bodycopy"><img src="images/view_image.gif" name="idx5c" class="imgborder_off" border="1" id="xquery06b" onClick="hideImage(this)" onMouseOver="showImage(this)"></p>
      <p class="bodycopy">&nbsp;</p>
      </td>
  </tr>
  <tbody> </tbody> 
</table>
<p class="bodycopy">In the above topic, you learned how to create <span class="bodycopy"> 
  B-Tree indexes on object relational storage and <font face="Courier New, Courier, mono">XMLIndex</font> 
  index on binary XML table. You also learned how to observe the performance of 
  SQL/XML, XQuery expressions by viewing the explain plan. </span></p>
<p align="right"><a href="#t" class="bodylink">Back to Topic List</a></p>
<h3 class="Install"><span class="navheader"><a name="xqv" id="t2"></a>Using <font face="Courier New, Courier, mono">XMLType</font> 
  Views with XQuery </span></h3>
<p> <span class="bodycopy"> You can use XQuery to generate XML from SQL data using 
  Views. Perform the following steps:</span></p>
<table border="0" cellspacing="0" cellpadding="1" width="650">
  <tr valign="top"> 
    <td width="25"><b> 1.</b></td>
    <td>
      <p class="bodycopy">You first will create an XML view over relational tables 
        by using a <font face="Courier New, Courier, mono">XMLTable()</font> SQL/XML 
        function and an XQuery expression. Execute the following script: </p>
      <p class="bodycopy"><strong>createXQueryView</strong><strong><br>
        </strong></p>
      <p><span class="bodycopy"><font face="Courier New, Courier, mono">create 
        or replace synonym departments for hr.departments<br>
        /<br>
        create or replace synonym locations for hr.locations <br>
        /<br>
        create or replace synonym countries for hr.countries <br>
        /<br>
        create or replace synonym employees for hr.employees <br>
        /<br>
        create or replace synonym jobs for hr.jobs <br>
        /<br>
        create or replace view DEPARTMENT_XQL of xmltype<br>
        with object id<br>
        (extract(object_value, '/Department/@DepartmentId').getnumberVal())<br>
        as<br>
        select column_value from XMLTable<br>
        ('for $d in ora:view(&quot;DEPARTMENTS&quot;), <br>
        $l in ora:view(&quot;LOCATIONS&quot;),<br>
        $c in ora:view(&quot;COUNTRIES&quot;)<br>
        where $d/ROW/LOCATION_ID = $l/ROW/LOCATION_ID<br>
        and $l/ROW/COUNTRY_ID = $c/ROW/COUNTRY_ID <br>
        return<br>
        &lt;Department DepartmentId= &quot;{$d/ROW/DEPARTMENT_ID/text()}&quot; 
        &gt;<br>
        &lt;Name&gt;{$d/ROW/DEPARTMENT_NAME/text()}&lt;/Name&gt;<br>
        &lt;Location&gt;<br>
        &lt;Address&gt;{$l/ROW/STREET_ADDRESS/text()}&lt;/Address&gt;<br>
        &lt;City&gt;{$l/ROW/CITY/text()}&lt;/City&gt;<br>
        &lt;State&gt;{$l/ROW/STATE_PROVINCE/text()}&lt;/State&gt;<br>
        &lt;Zip&gt;{$l/ROW/POSTAL_CODE/text()}&lt;/Zip&gt;<br>
        &lt;Country&gt;{$c/ROW/COUNTRY_NAME/text()}&lt;/Country&gt;<br>
        &lt;/Location&gt;<br>
        &lt;EmployeeList&gt;<br>
        {<br>
        for $e in ora:view(&quot;EMPLOYEES&quot;),<br>
        $m in ora:view(&quot;EMPLOYEES&quot;),<br>
        $j in ora:view(&quot;JOBS&quot;)<br>
        where $e/ROW/DEPARTMENT_ID = $d/ROW/DEPARTMENT_ID<br>
        and $j/ROW/JOB_ID = $e/ROW/JOB_ID<br>
        and $m/ROW/EMPLOYEE_ID = $e/ROW/MANAGER_ID<br>
        return<br>
        &lt;Employee employeeNumber=&quot;{$e/ROW/EMPLOYEE_ID/text()}&quot; &gt;<br>
        &lt;FirstName&gt;{$e/ROW/FIRST_NAME/text()}&lt;/FirstName&gt;<br>
        &lt;LastName&gt;{$e/ROW/LAST_NAME/text()}&lt;/LastName&gt;<br>
        &lt;EmailAddress&gt;{$e/ROW/EMAIL/text()}&lt;/EmailAddress&gt;<br>
        &lt;Telephone&gt;{$e/ROW/PHONE_NUMBER/text()}&lt;/Telephone&gt;<br>
        &lt;StartDate&gt;{$e/ROW/HIRE_DATE/text()}&lt;/StartDate&gt;<br>
        &lt;JobTitle&gt;{$j/ROW/JOB_TITLE/text()}&lt;/JobTitle&gt;<br>
        &lt;Salary&gt;{$e/ROW/SALARY/text()}&lt;/Salary&gt;<br>
        &lt;Manager&gt;{$m/ROW/LAST_NAME/text(), &quot;, &quot;, $m/ROW/FIRST_NAME/text()}&lt;/Manager&gt;<br>
        &lt;/Employee&gt;<br>
        }<br>
        &lt;/EmployeeList&gt;<br>
        &lt;/Department&gt;')<br>
        /<br>
        <br>
        </font></span> </p>
      <strong><font face="Courier New, Courier, mono"></font></strong><strong><font face="Courier New, Courier, mono"></font></strong>
<p class="style1 bodycopy"><strong><strong><img src="images/view_image.gif" name="view1a" class="imgborder_off" border="1" id="createxqueryview" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></strong></p>
      <p class="style1 bodycopy"><strong><strong><img src="images/view_image.gif" name="view1b" class="imgborder_off" border="1" id="createxqueryview" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></strong></p>
      <p class="style1 bodycopy"><strong><strong><img src="images/view_image.gif" name="view1c" class="imgborder_off" border="1" id="createxqueryview" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></strong></p>
      <p class="style1 bodycopy">&nbsp;</p>
      </td>
  </tr>
  <tr valign="top"> 
    <td width="25"><b> 2.</b></td>
    <td>
      <p class="bodycopy">Now you can show XQuery over the XML view you just created.</p>
      <p class="bodycopy"><b>a</b>. Execute the script <b>xqueryXQLView</b>.</p>
      <pre class="bodycopy"><span class="bodycopy"><font face="Courier New, Courier, mono">select t.column_value from department_xql x, xmltable('for $i in .<br>	 where $i/Department/EmployeeList/Employee/LastName=&quot;Grant&quot;<br>	 return $i/Department/Name'<br>	 passing value(x)) t<br>/</font></span><strong><span class="bodycopy"><font face="Courier New, Courier, mono"><br></font></span><br>
<span class="style1 bodycopy"><strong><strong><img src="images/view_image.gif" name="view2a" class="imgborder_off" border="1" id="xqueryxqlview01" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></strong></span></strong></pre>
      <p><b><span class="bodycopy">b</span></b><span class="bodycopy">. View the 
        execution plan of the query.Click the <b>Autotrace</b> icon.</span></p>
      <p><span class="style1 bodycopy"><strong><strong><img src="images/view_image.gif" name="view2b" class="imgborder_off" border="1" id="xqueryxqlview02" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></strong></span></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tbody> </tbody> 
</table>
<p align="right" class="bodycopy"><a href="#t">Back to Topic List</a></p>
<h3 class="Install"><span class="navheader"><a name="rvbi" id="t2"></a>Using Relational 
  Views over Binary XML Table</span></h3>
<p> <span class="bodycopy"> You can use the <font face="Courier New, Courier, mono">XMLTable()</font> 
  function to create and efficiently query relational views over binary XML tables. 
  Perform the following steps:</span></p>
<table border="0" cellspacing="0" cellpadding="1" width="650" class="bodycopy">
  <tr valign="top"> 
    <td width="25"><b> 1.</b></td>
    <td> 
      <p>You first will create a relational view over a binary XML by using a 
        XMLTable() SQL/XML function. Execute the script <strong>createXMLTableView.</strong></p>
      <p><font face="Courier New, Courier, mono">create or replace view PO_MASTER_DETAIL_VIEW<br>
        as<br>
        select m.REFERENCE,m.REQUESTOR,m.USERID,m.COSTCENTER,item.*<br>
        from PO_SL_BIX_TABLE, <br>
        xmltable<br>
        ('/PurchaseOrder' passing object_value<br>
        COLUMNS<br>
        REFERENCE varchar2(30) path 'Reference',<br>
        REQUESTOR varchar2(128) path 'Requestor',<br>
        USERID varchar(10) path 'User',<br>
        COSTCENTER varchar2(4) path 'CostCenter',<br>
        ITEMS xmltype path 'LineItems'<br>
        ) m,<br>
        xmltable<br>
        ('/LineItems/LineItem' passing m.items<br>
        COLUMNS<br>
        ITEMNO number(38) path '@ItemNumber',<br>
        DESCRIPTION varchar2(1024) path 'Description',<br>
        PARTNO varchar2(56) path 'Part/@Id',<br>
        QUANTITY number(38) path 'Part/@Quantity',<br>
        UNITPRICE number(12,2) path 'Part/@UnitPrice'<br>
        ) item</font><br>
        / </p>
      <p><strong><strong><img src="images/view_image.gif" name="binview1" class="imgborder_off" border="1" id="createxqueryview" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></strong></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr valign="top"> 
    <td width="25"><b> 2.</b></td>
    <td> 
      <p class="bodycopy">Now you can use SQL queries on the relational view. 
        Execute the script <b>queryXMLTable</b><strong>View.</strong></p>
      <p class="bodycopy"><font face="Courier New, Courier, mono">select REFERENCE, 
        ITEMNO, PARTNO, DESCRIPTION<br>
        from PO_MASTER_DETAIL_VIEW <br>
        where USERID = 'SBELL'<br>
        and PARTNO in ( '37429121726', '37429122129', '715515009058' )<br>
        /</font></p>
      <p></p>
      <p><span class="style1 bodycopy"><strong><strong><img src="images/view_image.gif" name="binview2a" class="imgborder_off" border="1" id="xqueryxqlview01" onClick="hideImage(this)" onMouseOver="showImage(this)"></strong></strong></span></p>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tbody> </tbody> 
</table>
<p class="bodycopy">In the above topic, you learned how to create a relational 
  view over a binary XML table. You also learned how to use query the relational 
  view. </p>
<p align="right" class="bodycopy"><a href="#t">Back to Topic List</a></p>
<p>&nbsp;</p>
<h4>
  <p class="navheader"><a name="s"></a>Summary</p>
</H4>
<p><span class=bodycopy>In this tutorial, you learned how to:</span></p>
<table border="0" cellpadding="1" cellspacing="0">
  <tr valign="top">
    <td width="16" class="bodycopy"><img src="images/bullet.gif" width="16" height="16"></td>
    <td colspan="2" class="bodycopy" width="696">Review an XML Schema in Enterprise 
      Manager </td>
  </tr>
  <tr valign="top"> 
    <td width="16" class="bodycopy"><img src="images/bullet.gif" width="16" height="16"></td>
    <td colspan="2" class="bodycopy" width="696">Create a binary XML table and 
      store data</td>
  </tr>
  <tr valign="top"> 
    <td width="16" class="bodycopy"><img src="images/bullet.gif" width="16" height="16"></td>
    <td colspan="2" class="bodycopy" width="696">Add indexes to improve the performance 
      of XQuery expressions</td>
  </tr>
  <tr valign="top"> 
    <td width="16" class="bodycopy"><img src="images/bullet.gif" width="16" height="16"></td>
    <td colspan="2" class="bodycopy" width="696">Create an <font face="Courier New, Courier, mono">XMLType</font> 
      view with XQuery</td>
  </tr>
  <tr valign="top"> 
    <td width="16" class="bodycopy"><img src="images/bullet.gif" width="16" height="16"></td>
    <td colspan="2" class="bodycopy" width="696">Use relational views over binary 
      XML table</td>
  </tr>
  <tbody> </tbody> 
</table>
<p align="right"><a href="#t" class="bodylink">Back to Topic List</a></p>
<h3 class="bodycopy"><img src="images/view_image.gif" width="24" height="24" align="absmiddle" onMouseOver="hideAllImages()">  <b><font color="#ff0000">Place the cursor over this icon to hide all screenshots.</font></b>
</h3>
<h4 align="left">
  <p align="left"> 
  </p>
</h4>
<div align="right"></div>
<h4 align="left">
  <p align="left"> 
  </p>
</h4>
<div align="right"></div>
<h4>
  <p></p>
  <h3>&nbsp;</h3>
  <h4>&nbsp;</h4>
  <h4>&nbsp;</h4>
</h4>
</body>
<script language="JavaScript" type="text/JavaScript">
<!--
preLoadImages();
//-->
</script>


<script language="JavaScript" type="text/JavaScript">
<!--
preLoadImages();
//-->
</script>
</html>